{
    "openapi": "3.1.0",
    "info": {
        "title": "Global Trade and Supply Chain - Test Endpoints",
        "description": "REST API for Global Trade and Supply Chain - Test Endpoints.",
        "version": "1.0.0",
        "license": {
            "name": "Apache 2.0 License",
            "url": "https://opensource.org/licenses/Apache-2.0"
        }
    },
    "servers": [
        {
            "url": "https://localhost"
        }
    ],
    "tags": [],
    "paths": {
        "/attestation/sign": {
            "post": {
                "operationId": "attestationSign",
                "summary": "Sign a data set",
                "tags": [
                    "Attestation"
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response when creating the proof for a data set.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttestationSignResponse"
                                },
                                "examples": {
                                    "attestationSignResponseExample": {
                                        "value": {
                                            "proof": {
                                                "type": "Ed25519Signature2018",
                                                "proofPurpose": "assertionMethod",
                                                "created": "2024-05-17T13:36:26.072Z",
                                                "proofValue": "1d9f8d9sd9fjeiweob50ac63129782a1c3y837f6s78s8cg8hjg76hj5h342k33h",
                                                "blobStorageId": "urn:ipfs:...."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong with the request see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Sign the data set and return the proof.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttestationSignRequest"
                            },
                            "examples": {
                                "attestationSignExample": {
                                    "value": {
                                        "keyId": "my-private-key-id",
                                        "data": "eyJkb2NOYW1lIjoiZm9vIiwiZG9jVHlwZSI6InRlc3QtZG9jLXR5cGUifQ=="
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attestation/verify": {
            "post": {
                "operationId": "attestationVerify",
                "summary": "Verify a data set and proof",
                "tags": [
                    "Attestation"
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response to verifying a proof.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttestationVerifyResponse"
                                },
                                "examples": {
                                    "attestationVerifyResponseExample": {
                                        "value": {
                                            "verified": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong with the request see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Verify that the proof is valid for the data.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttestationVerifyRequest"
                            },
                            "examples": {
                                "attestationVerifyExample": {
                                    "value": {
                                        "proof": {
                                            "type": "Ed25519Signature2018",
                                            "proofPurpose": "assertionMethod",
                                            "created": "2024-05-17T13:36:26.072Z",
                                            "proofValue": "1d9f8d9sd9fjeiweob50ac63129782a1c3y837f6s78s8cg8hjg76hj5h342k33h",
                                            "blobStorageId": "urn:ipfs:...."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "HttpStatusCodes": {
                "type": "object",
                "additionalProperties": false,
                "description": "Standard HTTP status codes."
            },
            "Error": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for the error."
                    },
                    "message": {
                        "type": "string",
                        "description": "The message for the error."
                    },
                    "source": {
                        "type": "string",
                        "description": "The source of the error."
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Any additional information for the error."
                    },
                    "stack": {
                        "type": "string",
                        "description": "The stack trace for the error."
                    },
                    "inner": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "required": [
                    "name",
                    "message"
                ],
                "additionalProperties": false,
                "description": "Model to describe serialized error."
            },
            "AttestationSignRequest": {
                "type": "object",
                "properties": {
                    "keyId": {
                        "type": "string",
                        "description": "The key id from a vault to sign the data."
                    },
                    "data": {
                        "type": "string",
                        "description": "The base64 encoded data to sign."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace to store the data in, defaults to service configured namespace."
                    }
                },
                "required": [
                    "keyId",
                    "data"
                ],
                "additionalProperties": false,
                "description": "The data to be used in the signing."
            },
            "AttestationSignResponse": {
                "type": "object",
                "properties": {
                    "proof": {
                        "$ref": "#/components/schemas/AttestationProof"
                    }
                },
                "required": [
                    "proof"
                ],
                "additionalProperties": false,
                "description": "The data to be used in the signing."
            },
            "AttestationProof": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the proof."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the proof."
                    },
                    "proofPurpose": {
                        "type": "string",
                        "description": "The purpose of the proof."
                    },
                    "proofValue": {
                        "type": "string",
                        "description": "Contains the base-encoded binary data necessary to verify the digital proof using the verificationMethod specified."
                    },
                    "verificationMethod": {
                        "type": "string",
                        "description": "The verification method of the proof."
                    },
                    "created": {
                        "type": "string",
                        "description": "The iso date of when the proof was created."
                    },
                    "expires": {
                        "type": "string",
                        "description": "The iso date of when the proof expires."
                    },
                    "domain": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ],
                        "description": "One or more security domains in which the proof is meant to be used."
                    },
                    "challenge": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ],
                        "description": "Provided to mitigate replay attacks on domains."
                    },
                    "previousProof": {
                        "type": "string",
                        "description": "Identifies another data integrity proof that MUST verify before the current proof is processed"
                    },
                    "nonce": {
                        "type": "string",
                        "description": "Use of this field is to increase privacy by decreasing linkability that is the result of deterministically generated signatures."
                    },
                    "blobStorageId": {
                        "type": "string",
                        "description": "The location of the data in blob storage."
                    }
                },
                "required": [
                    "blobStorageId",
                    "proofPurpose",
                    "type"
                ],
                "additionalProperties": false,
                "description": "Interface describing an attestation proof."
            },
            "AttestationVerifyRequest": {
                "type": "object",
                "properties": {
                    "proof": {
                        "$ref": "#/components/schemas/AttestationProof"
                    }
                },
                "required": [
                    "proof"
                ],
                "additionalProperties": false,
                "description": "The parameters to be used in the verification."
            },
            "AttestationVerifyResponse": {
                "type": "object",
                "properties": {
                    "verified": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "verified"
                ],
                "additionalProperties": false,
                "description": "The data to be used in the verification response."
            }
        },
        "securitySchemes": {
            "jwtBearerAuthScheme": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}