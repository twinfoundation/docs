{
    "openapi": "3.1.0",
    "info": {
        "title": "Global Trade and Supply Chain - Test Endpoints",
        "description": "REST API for Global Trade and Supply Chain - Test Endpoints.",
        "version": "1.0.0",
        "license": {
            "name": "Apache 2.0 License",
            "url": "https://opensource.org/licenses/Apache-2.0"
        }
    },
    "servers": [
        {
            "url": "https://localhost"
        }
    ],
    "tags": [],
    "paths": {
        "/blob-storage": {
            "post": {
                "operationId": "blobStorageSet",
                "summary": "Set a blob in to storage",
                "tags": [
                    "Blob Storage"
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The rest request ended in created response.",
                        "headers": {
                            "location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "e.g. blob-memory:c57d94b088f4c6d2cb32ded014813d0c786aa00134c8ee22f84b1e2545602a70"
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong with the request see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Request to set an entry in blob storage.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BlobStorageSetRequest"
                            },
                            "examples": {
                                "blobStorageSetExample": {
                                    "value": {
                                        "blob": "VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZw=="
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blob-storage/{id}": {
            "get": {
                "operationId": "blobStorageGet",
                "summary": "Get the blob from storage",
                "tags": [
                    "Blob Storage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the blob to get in urn format.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "blob-memory:c57d94b088f4c6d2cb32ded014813d0c786aa00134c8ee22f84b1e2545602a70"
                    }
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to get an entry from blob storage.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlobStorageGetResponse"
                                },
                                "examples": {
                                    "blobStorageGetResponseExample": {
                                        "value": {
                                            "blob": "VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZw=="
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong with the request see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you tried to access does not exist, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "NotFoundError",
                                            "message": "component.error",
                                            "properties": {
                                                "notFoundId": "1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "blobStorageRemove",
                "summary": "Remove the blob from storage",
                "tags": [
                    "Blob Storage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the blob to remove in urn format.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "blob-memory:c57d94b088f4c6d2cb32ded014813d0c786aa00134c8ee22f84b1e2545602a70"
                    }
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The rest request ended in success with no data."
                    },
                    "400": {
                        "description": "Something went wrong with the request see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you tried to access does not exist, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "NotFoundError",
                                            "message": "component.error",
                                            "properties": {
                                                "notFoundId": "1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CreatedResponse": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "$ref": "#/components/schemas/HttpStatusCodes"
                    },
                    "headers": {
                        "type": "object",
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location where the resource was created."
                            }
                        },
                        "required": [
                            "location"
                        ],
                        "additionalProperties": false,
                        "description": "Additional response headers."
                    }
                },
                "required": [
                    "statusCode",
                    "headers"
                ],
                "additionalProperties": false,
                "description": "The rest request ended in created response."
            },
            "HttpStatusCodes": {
                "type": "object",
                "additionalProperties": false,
                "description": "Standard HTTP status codes."
            },
            "NoContentResponse": {
                "type": "object",
                "additionalProperties": false,
                "description": "The rest request ended in success with no data."
            },
            "Error": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for the error."
                    },
                    "message": {
                        "type": "string",
                        "description": "The message for the error."
                    },
                    "source": {
                        "type": "string",
                        "description": "The source of the error."
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Any additional information for the error."
                    },
                    "stack": {
                        "type": "string",
                        "description": "The stack trace for the error."
                    },
                    "inner": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "required": [
                    "name",
                    "message"
                ],
                "additionalProperties": false,
                "description": "Model to describe serialized error."
            },
            "NotFoundResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for the error."
                    },
                    "message": {
                        "type": "string",
                        "description": "The message for the error."
                    },
                    "source": {
                        "type": "string",
                        "description": "The source of the error."
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Any additional information for the error."
                    },
                    "stack": {
                        "type": "string",
                        "description": "The stack trace for the error."
                    },
                    "inner": {
                        "$ref": "#/components/schemas/Error"
                    },
                    "notFoundId": {
                        "type": "string",
                        "description": "The id if the item that was not found."
                    }
                },
                "additionalProperties": false,
                "required": [
                    "message",
                    "name"
                ],
                "description": "The resource you tried to access does not exist, see the error field for more details."
            },
            "BlobStorageSetRequest": {
                "type": "object",
                "properties": {
                    "blob": {
                        "type": "string",
                        "description": "The data to store in base64 encoding."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace to store the data in, defaults to service configured namespace."
                    }
                },
                "required": [
                    "blob"
                ],
                "additionalProperties": false,
                "description": "The body parameters."
            },
            "BlobStorageGetResponse": {
                "type": "object",
                "properties": {
                    "blob": {
                        "type": "string",
                        "description": "The blob in base64 format."
                    }
                },
                "required": [
                    "blob"
                ],
                "additionalProperties": false,
                "description": "The body parameters."
            }
        },
        "securitySchemes": {
            "jwtBearerAuthScheme": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}