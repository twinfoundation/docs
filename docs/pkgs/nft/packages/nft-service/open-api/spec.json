{
    "openapi": "3.1.0",
    "info": {
        "title": "Global Trade and Supply Chain - Test Endpoints",
        "description": "REST API for Global Trade and Supply Chain - Test Endpoints.",
        "version": "1.0.0",
        "license": {
            "name": "Apache 2.0 License",
            "url": "https://opensource.org/licenses/Apache-2.0"
        }
    },
    "servers": [
        {
            "url": "https://localhost"
        }
    ],
    "tags": [
        {
            "name": "NFT",
            "description": "Endpoints which are modelled to access an NFT contract."
        }
    ],
    "paths": {
        "/nft": {
            "post": {
                "operationId": "nftMint",
                "summary": "Mint an NFT",
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The rest request ended in created response.",
                        "headers": {
                            "location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "e.g. urn:iota-nft:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg=="
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong with the request see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Mint the data and return the NFT id.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NftMintRequest"
                            },
                            "examples": {
                                "nftMintExample": {
                                    "value": {
                                        "issuer": "tst1prctjk5ck0dutnsunnje6u90jk5htx03qznjjmkd6843pzltlgz87srjzzv",
                                        "tag": "MY-NFT",
                                        "immutableMetadata": {
                                            "docName": "bill-of-lading",
                                            "mimeType": "application/pdf",
                                            "fingerprint": "0xf0b95a98b3dbc5ce1c9ce59d70af95a97599f100a7296ecdd1eb108bebfa047f"
                                        },
                                        "metadata": {
                                            "data": "tst1prctjk5ck0dutnsunnje6u90jk5htx03qznjjmkd6843pzltlgz87srjzzv"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nft/{id}": {
            "get": {
                "operationId": "nftResolve",
                "summary": "Resolve an NFT",
                "tags": [
                    "NFT"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the NFT to resolve.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "urn:iota-nft:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg=="
                    }
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to resolving the NFT.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NftResolveResponse"
                                },
                                "examples": {
                                    "nftResolveResponseExample": {
                                        "value": {
                                            "issuer": "tst1prctjk5ck0dutnsunnje6u90jk5htx03qznjjmkd6843pzltlgz87srjzzv",
                                            "owner": "tst1prctjk5ck0dutnsunnje6u90jk5htx03qznjjmkd6843pzltlgz87srjzzv",
                                            "tag": "MY-NFT",
                                            "immutableMetadata": {
                                                "docName": "bill-of-lading",
                                                "mimeType": "application/pdf",
                                                "fingerprint": "0xf0b95a98b3dbc5ce1c9ce59d70af95a97599f100a7296ecdd1eb108bebfa047f"
                                            },
                                            "metadata": {
                                                "data": "AAAAA"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong with the request see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "nftUpdate",
                "summary": "Update an NFT",
                "tags": [
                    "NFT"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the NFT to transfer in urn format.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "urn:iota-nft:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg=="
                    }
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The rest request ended in success with no data."
                    },
                    "400": {
                        "description": "Something went wrong with the request see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Update the mutable data for the NFT.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NftUpdateRequest"
                            },
                            "examples": {
                                "nftUpdateExample": {
                                    "value": {
                                        "metadata": {
                                            "data": "AAAAA"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nft/{id}/burn": {
            "post": {
                "operationId": "nftBurn",
                "summary": "Burn an NFT",
                "tags": [
                    "NFT"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the NFT to resolve.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "urn:iota-nft:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg=="
                    }
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The rest request ended in success with no data."
                    },
                    "400": {
                        "description": "Something went wrong with the request see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Burn the NFT.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NftBurnRequest"
                            },
                            "examples": {
                                "nftBurnExample": {
                                    "value": {
                                        "owner": "tst1prctjk5ck0dutnsunnje6u90jk5htx03qznjjmkd6843pzltlgz87srjzzv"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nft/{id}/transfer": {
            "post": {
                "operationId": "nftTransfer",
                "summary": "Transfer an NFT",
                "tags": [
                    "NFT"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the NFT to transfer in urn format.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "urn:iota-nft:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg=="
                    }
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The rest request ended in success with no data."
                    },
                    "400": {
                        "description": "Something went wrong with the request see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Transfer the NFT and update the metadata.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NftTransferRequest"
                            },
                            "examples": {
                                "nftTransferExample": {
                                    "value": {
                                        "recipient": "tst1prctjk5ck0dutnsunnje6u90jk5htx03qznjjmkd6843pzltlgz87srjzzv",
                                        "metadata": {
                                            "data": "AAAAA"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Error": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for the error."
                    },
                    "message": {
                        "type": "string",
                        "description": "The message for the error."
                    },
                    "source": {
                        "type": "string",
                        "description": "The source of the error."
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Any additional information for the error."
                    },
                    "stack": {
                        "type": "string",
                        "description": "The stack trace for the error."
                    },
                    "inner": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "required": [
                    "name",
                    "message"
                ],
                "additionalProperties": false,
                "description": "Model to describe serialized error."
            },
            "NftMintRequest": {
                "type": "object",
                "properties": {
                    "issuer": {
                        "type": "string",
                        "description": "The issuer for the NFT, will also be the initial owner."
                    },
                    "tag": {
                        "type": "string",
                        "description": "The tag for the NFT."
                    },
                    "immutableMetadata": {
                        "description": "The immutable metadata for the NFT."
                    },
                    "metadata": {
                        "description": "The metadata for the NFT."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the connector to use for the NFT, defaults to service configured namespace."
                    }
                },
                "required": [
                    "issuer",
                    "tag"
                ],
                "additionalProperties": false,
                "description": "The data to be used in the minting."
            },
            "NftResolveResponse": {
                "type": "object",
                "properties": {
                    "issuer": {
                        "type": "string",
                        "description": "The issuer of the NFT."
                    },
                    "owner": {
                        "type": "string",
                        "description": "The owner of the NFT."
                    },
                    "tag": {
                        "type": "string",
                        "description": "The tag data for the NFT."
                    },
                    "immutableMetadata": {
                        "description": "The immutable data for the NFT."
                    },
                    "metadata": {
                        "description": "The metadata for the NFT."
                    }
                },
                "required": [
                    "issuer",
                    "owner",
                    "tag"
                ],
                "additionalProperties": false,
                "description": "The data that was resolved."
            },
            "NftBurnRequest": {
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string",
                        "description": "The owner for the NFT to return the funds to."
                    }
                },
                "required": [
                    "owner"
                ],
                "additionalProperties": false,
                "description": "The data to be used for burning."
            },
            "NftTransferRequest": {
                "type": "object",
                "properties": {
                    "recipient": {
                        "type": "string",
                        "description": "The recipient for the NFT."
                    },
                    "metadata": {
                        "description": "The metadata for the NFT."
                    }
                },
                "required": [
                    "recipient"
                ],
                "additionalProperties": false,
                "description": "The data to be used in the transfer."
            },
            "NftUpdateRequest": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "description": "The metadata for the NFT."
                    }
                },
                "additionalProperties": false,
                "description": "The data to be used in the update."
            }
        },
        "securitySchemes": {
            "jwtBearerAuthScheme": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}