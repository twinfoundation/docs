diff --git a/node_modules/@docusaurus/plugin-content-docs/lib/routes.js b/node_modules/@docusaurus/plugin-content-docs/lib/routes.js
index b500a02..4b6a806 100644
--- a/node_modules/@docusaurus/plugin-content-docs/lib/routes.js
+++ b/node_modules/@docusaurus/plugin-content-docs/lib/routes.js
@@ -38,28 +38,33 @@ async function buildVersionCategoryGeneratedIndexRoutes({ version, options, }) {
     return Promise.all(version.categoryGeneratedIndices.map(buildCategoryGeneratedIndexRoute));
 }
 async function buildVersionDocRoutes({ version, actions, options, }) {
-    return Promise.all(version.docs.map(async (doc) => {
-        await actions.createData(
-        // Note that this created data path must be in sync with
-        // metadataPath provided to mdx-loader.
-        `${(0, utils_1.docuHash)(doc.source)}.json`, doc);
-        const docRoute = {
-            path: doc.permalink,
-            component: options.docItemComponent,
-            exact: true,
-            modules: {
-                content: doc.source,
-            },
-            metadata: createDocRouteMetadata(doc),
-            // Because the parent (DocRoot) comp need to access it easily
-            // This permits to render the sidebar once without unmount/remount when
-            // navigating (and preserve sidebar state)
-            ...(doc.sidebar && {
-                sidebar: doc.sidebar,
-            }),
-        };
-        return docRoute;
-    }));
+    const results = [];
+    for (let i = 0; i < version.docs.length; i++) {
+        const doc = version.docs[i];
+        if (doc) {
+            await actions.createData(
+            // Note that this created data path must be in sync with
+            // metadataPath provided to mdx-loader.
+            `${(0, utils_1.docuHash)(doc.source)}.json`, doc);
+            const docRoute = {
+                path: doc.permalink,
+                component: options.docItemComponent,
+                exact: true,
+                modules: {
+                    content: doc.source,
+                },
+                metadata: createDocRouteMetadata(doc),
+                // Because the parent (DocRoot) comp need to access it easily
+                // This permits to render the sidebar once without unmount/remount when
+                // navigating (and preserve sidebar state)
+                ...(doc.sidebar && {
+                    sidebar: doc.sidebar,
+                }),
+            };
+            results.push(docRoute);
+        }
+    }
+    return results;
 }
 async function buildVersionSidebarRoute(param) {
     const [docRoutes, categoryGeneratedIndexRoutes] = await Promise.all([