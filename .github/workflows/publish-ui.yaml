name: Publish UI to Vercel

on:
  workflow_dispatch:
    inputs:
      # Allow the user to choose which type of release to prepare
      releaseType:
        description: 'Which type of release to create'
        required: true
        type: choice
        options:
          - 'ðŸš§ prerelease (next branch)' # For development releases (e.g., 0.1.0-next.1) - uses 'next' branch
          - 'ðŸš€ major (main branch)' # For breaking changes (e.g., 1.0.0) - uses 'main' branch

permissions:
  contents: read
  pull-requests: write
  deployments: write

env:
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_DOCS }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Set branch variable based on release type
      - name: Set target branch
        id: set-branch
        run: |
          INPUT="${{ github.event.inputs.releaseType }}"

          if [[ "$INPUT" == *"patch"* ]]; then
            BRANCH="main"
            SEMVER_TYPE="patch"
          elif [[ "$INPUT" == *"minor"* ]]; then
            BRANCH="main"
            SEMVER_TYPE="minor"
          elif [[ "$INPUT" == *"major"* ]]; then
            BRANCH="main"
            SEMVER_TYPE="major"
          elif [[ "$INPUT" == *"prerelease"* ]]; then
            BRANCH="next"
            SEMVER_TYPE="prerelease"
          else
            echo "Error: Unrecognized release type: $INPUT"
            exit 1
          fi
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "semver_type=$SEMVER_TYPE" >> $GITHUB_OUTPUT
          echo "Using branch: $BRANCH"
          echo "Using semver type: $SEMVER_TYPE"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.set-branch.outputs.branch }} # Checkout the calculated branch

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Vercel CLI
        run: npm install -g vercel

      # Deploy To vercel and output the deployment URL as a GitHub output from the step
      - name: Deploy to Vercel
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy \
          --token=${{ secrets.VERCEL_TOKEN }} \
          --scope=${{ secrets.VERCEL_SCOPE }} \
          --target=${{ steps.set-branch.outputs.branch == 'main' && 'production' || 'dev' }} \
          --force)
          echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

      # Use the deployment URL to set an alias for the deployment
      - name: Set Alias
        run: |
          vercel alias set \
          ${{ steps.deploy.outputs.deployment-url }} \
          ${{ steps.set-branch.outputs.branch == 'main' && secrets.DOMAIN_DOCS_PROD || secrets.DOMAIN_DOCS_DEV }} \
          --token=${{ secrets.VERCEL_TOKEN }} \
          --scope=${{ secrets.VERCEL_SCOPE }}
