name: Update Next Docs from Packages

env:
  gha-branch: next

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Docs
        uses: actions/checkout@v4
        with:
          ref: ${{ env.gha-branch }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore root node_modules from cache
        id: node-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Clean up
        run: rm -rf docs/ref/

      ########### tools
      - name: Checkout tools
        uses: actions/checkout@v4
        with:
          repository: gtscio/tools
          path: import-packages/tools
          ref: ${{ env.gha-branch }}
          token: ${{ secrets.GH_PAT }}

      - name: Copy tools to Docs
        run: |
          jq -r '.workspaces[]' import-packages/tools/package.json | while read pkg; do
            rm -rf docs/ref/tools/$pkg
            cp -r import-packages/tools/$pkg/docs docs/ref/tools/$pkg
            cp -r import-packages/tools/$pkg/package.json docs/ref/tools/$pkg/package.json
          done

          cp import-packages/tools/package.json docs/ref/tools/package.json
          rm -r import-packages/tools

      ########### framework
      - name: Checkout framework
        uses: actions/checkout@v4
        with:
          repository: gtscio/framework
          path: import-packages/framework
          ref: ${{ env.gha-branch }}
          token: ${{ secrets.GH_PAT }}

      - name: Copy framework to Docs
        run: |
          jq -r '.workspaces[]' import-packages/framework/package.json | while read pkg; do
            rm -rf docs/ref/framework/$pkg
            cp -r import-packages/framework/$pkg/docs docs/ref/framework/$pkg
            cp -r import-packages/framework/$pkg/package.json docs/ref/framework/$pkg/package.json
          done

          cp import-packages/framework/package.json docs/ref/framework/package.json
          rm -r import-packages/framework

      ########### standards
      - name: Checkout standards
        uses: actions/checkout@v4
        with:
          repository: gtscio/standards
          path: import-packages/standards
          ref: ${{ env.gha-branch }}
          token: ${{ secrets.GH_PAT }}

      - name: Copy standards to Docs
        run: |
          jq -r '.workspaces[]' import-packages/standards/package.json | while read pkg; do
            rm -rf docs/ref/standards/$pkg
            cp -r import-packages/standards/$pkg/docs docs/ref/standards/$pkg
            cp -r import-packages/standards/$pkg/package.json docs/ref/standards/$pkg/package.json
          done

          cp import-packages/standards/package.json docs/ref/standards/package.json
          rm -r import-packages/standards

      ########### api
      - name: Checkout api
        uses: actions/checkout@v4
        with:
          repository: gtscio/api
          path: import-packages/api
          ref: ${{ env.gha-branch }}
          token: ${{ secrets.GH_PAT }}

      - name: Copy api to Docs
        run: |
          jq -r '.workspaces[]' import-packages/api/package.json | while read pkg; do
            rm -rf docs/ref/api/$pkg
            cp -r import-packages/api/$pkg/docs docs/ref/api/$pkg
            cp -r import-packages/api/$pkg/package.json docs/ref/api/$pkg/package.json
          done

          cp import-packages/api/package.json docs/ref/api/package.json
          rm -r import-packages/api

      ########### entity-storage
      - name: Checkout entity-storage
        uses: actions/checkout@v4
        with:
          repository: gtscio/entity-storage
          path: import-packages/entity-storage
          ref: ${{ env.gha-branch }}
          token: ${{ secrets.GH_PAT }}

      - name: Copy entity-storage to Docs
        run: |
          jq -r '.workspaces[]' import-packages/entity-storage/package.json | while read pkg; do
            rm -rf docs/ref/entity-storage/$pkg
            cp -r import-packages/entity-storage/$pkg/docs docs/ref/entity-storage/$pkg
            cp -r import-packages/entity-storage/$pkg/package.json docs/ref/entity-storage/$pkg/package.json
          done

          cp import-packages/entity-storage/package.json docs/ref/entity-storage/package.json
          rm -r import-packages/entity-storage

      ########### logging
      - name: Checkout logging
        uses: actions/checkout@v4
        with:
          repository: gtscio/logging
          path: import-packages/logging
          ref: ${{ env.gha-branch }}
          token: ${{ secrets.GH_PAT }}

      - name: Copy logging to Docs
        run: |
          jq -r '.workspaces[]' import-packages/logging/package.json | while read pkg; do
            rm -rf docs/ref/logging/$pkg
            cp -r import-packages/logging/$pkg/docs docs/ref/logging/$pkg
            cp -r import-packages/logging/$pkg/package.json docs/ref/logging/$pkg/package.json
          done

          cp import-packages/logging/package.json docs/ref/logging/package.json
          rm -r import-packages/logging

      ########### vault
      - name: Checkout vault
        uses: actions/checkout@v4
        with:
          repository: gtscio/vault
          path: import-packages/vault
          ref: ${{ env.gha-branch }}
          token: ${{ secrets.GH_PAT }}

      - name: Copy vault to Docs
        run: |
          jq -r '.workspaces[]' import-packages/vault/package.json | while read pkg; do
            rm -rf docs/ref/vault/$pkg
            cp -r import-packages/vault/$pkg/docs docs/ref/vault/$pkg
            cp -r import-packages/vault/$pkg/package.json docs/ref/vault/$pkg/package.json
          done

          cp import-packages/vault/package.json docs/ref/vault/package.json
          rm -r import-packages/vault

      ########### wallet
      - name: Checkout wallet
        uses: actions/checkout@v4
        with:
          repository: gtscio/wallet
          path: import-packages/wallet
          ref: ${{ env.gha-branch }}
          token: ${{ secrets.GH_PAT }}

      - name: Copy wallet to Docs
        run: |
          jq -r '.workspaces[]' import-packages/wallet/package.json | while read pkg; do
            rm -rf docs/ref/wallet/$pkg
            cp -r import-packages/wallet/$pkg/docs docs/ref/wallet/$pkg
            cp -r import-packages/wallet/$pkg/package.json docs/ref/wallet/$pkg/package.json
          done

          cp import-packages/wallet/package.json docs/ref/wallet/package.json
          rm -r import-packages/wallet

      ########### identity
      - name: Checkout identity
        uses: actions/checkout@v4
        with:
          repository: gtscio/identity
          path: import-packages/identity
          ref: ${{ env.gha-branch }}
          token: ${{ secrets.GH_PAT }}

      - name: Copy identity to Docs
        run: |
          jq -r '.workspaces[]' import-packages/identity/package.json | while read pkg; do
            rm -rf docs/ref/identity/$pkg
            cp -r import-packages/identity/$pkg/docs docs/ref/identity/$pkg
            cp -r import-packages/identity/$pkg/package.json docs/ref/identity/$pkg/package.json
          done

          cp import-packages/identity/package.json docs/ref/identity/package.json
          rm -r import-packages/identity

      ########### common
      - name: Build
        run: npm run build

      - name: Create Pull Request
        run: |
          git checkout -b docs/update-${{ env.gha-branch }}-${{ github.sha }}
          git config --global user.name 'GTSC'
          git config --global user.email 'ci@gtsc.io'
          git add .
          git commit -am "Update Packages Documentation"
          git push --set-upstream origin docs/update-${{ env.gha-branch }}-${{ github.sha }}
          # Enable GitHub Actions Read and write permissions under Settings > Actions
          # Allow GitHub Actions to create and approve pull requests under Settings > Actions
          gh pr create -B ${{ env.gha-branch }} -H docs/update-${{ env.gha-branch }}-${{ github.sha }} --title 'Merge packages documentation into ${{ env.gha-branch }}' --body 'Merges the docs from the packages into ${{ env.gha-branch }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
