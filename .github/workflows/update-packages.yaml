name: Create a PR with updated Docs

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  # Get the list of all the repos to update
  get-repos:
    runs-on: ubuntu-latest
    outputs:
      # This output will be consumed by the update-docs job's matrix
      packages: ${{ steps.get-repos.outputs.repos }}

    steps:
      - name: Checkout Docs
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      # Read the repos.json file to get the list of repos and store it in a variable
      - name: Get list of repos
        id: get-repos
        run: |
          # Use Node.js to read the workspaces array from package.json
          REPOS=$(node -e '
            const repos = JSON.parse(require("fs").readFileSync("./repos.json", "utf8"));
            console.log(JSON.stringify(repos.map(r => r.name)));
          ')
          echo "Found repos: $REPOS"
          # Set the output for use in the matrix strategy
          echo "repos=$REPOS" >> $GITHUB_OUTPUT

      # Cache the docs directory so we can update it in each matrix job
      - name: Cache a directory
        uses: actions/cache@v4
        with:
          path: ./docs/pkgs/
          key: docs-cache-${{ github.sha }}

  # Update from the individual repos with the latest docs
  update-docs:
    runs-on: ubuntu-latest
    needs: get-repos # Wait for the get-repos job to complete

    steps:
      - name: Debug
        run: |
          echo ${{ fromJson(needs.get-repos.outputs.repos) }}